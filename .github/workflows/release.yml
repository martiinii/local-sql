name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        package: ["app", "api", "cli"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun.js
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun i

      - name: Build ${{matrix.package}}
        run: bun run build:${{matrix.package}}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{matrix.package}}
          path: ${{ matrix.package == 'cli' && 'packages/cli/build' || format('apps/{0}/build', matrix.package) }}
          retention-days: 1
          if-no-files-found: error
          include-hidden-files: true

  publish:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        package: [app, api, cli]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun.js
        uses: oven-sh/setup-bun@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{matrix.package}}
          path: ${{ matrix.package == 'cli' && 'packages/cli/build' || format('apps/{0}/build', matrix.package) }}

      - name: Determine npm tag
        id: determine_npm_tag
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if [[ "$TAG" =~ -(next|canary|beta|rc) ]]; then
            # Extract pre-release tag (e.g., beta, rc)
            NPM_TAG=${BASH_REMATCH[1]}
          else
            # Check if the commit is on the main branch
            git fetch origin main
            if git merge-base --is-ancestor "$GITHUB_SHA" origin/main; then
              NPM_TAG="latest"
            else
              echo "The tagged commit is not on the main branch."
              echo "::error ::Releases with the 'latest' npm tag must be on the main branch."
              exit 1
            fi
          fi
          echo "npm_tag=$NPM_TAG" >> $GITHUB_OUTPUT
          echo "Using npm tag: $NPM_TAG"

      - name: Publish ${{matrix.package}} to npm
        run: |
          cd ${{ matrix.package == 'cli' && 'packages/cli/build' || format('apps/{0}/build', matrix.package) }}
          bun publish --verbose --access public --tag ${{ steps.determine_npm_tag.outputs.npm_tag }}
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}